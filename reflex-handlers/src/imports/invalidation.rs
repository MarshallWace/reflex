// SPDX-FileCopyrightText: 2023 Marshall Wace <opensource@mwam.com>
// SPDX-License-Identifier: Apache-2.0
// SPDX-FileContributor: Tim Kendrick <t.kendrick@mwam.com> https://github.com/timkendrickmw
use reflex::core::{create_record, Builtin, Expression, ExpressionFactory, HeapAllocator, SignalType};
use reflex_macros::blanket_trait;

use crate::actor::timestamp::EFFECT_TYPE_TIMESTAMP;

blanket_trait!(
    pub trait InvalidationImportBuiltin:
        Builtin
        + From<crate::stdlib::scan::Scan>
        + From<crate::stdlib::variable::GetVariable>
        + From<crate::stdlib::variable::IncrementVariable>
        + From<reflex_stdlib::stdlib::Apply>
        + From<reflex_stdlib::stdlib::CollectList>
        + From<reflex_stdlib::stdlib::CollectSignal>
        + From<reflex_stdlib::stdlib::Effect>
        + From<reflex_stdlib::stdlib::Get>
        + From<reflex_stdlib::stdlib::Hash>
        + From<reflex_stdlib::stdlib::If>
        + From<reflex_stdlib::stdlib::IfError>
        + From<reflex_stdlib::stdlib::IfPending>
        + From<reflex_stdlib::stdlib::Map>
        + From<reflex_stdlib::stdlib::Max>
        + From<reflex_stdlib::stdlib::Merge>
        + From<reflex_stdlib::stdlib::Min>
        + From<reflex_stdlib::stdlib::Multiply>
        + From<reflex_stdlib::stdlib::Raise>
        + From<reflex_stdlib::stdlib::ResolveArgs>
        + From<reflex_stdlib::stdlib::Sequence>
        + From<reflex_stdlib::stdlib::Subtract>
    {
    }
);

pub fn import_invalidation<T: Expression>(
    factory: &impl ExpressionFactory<T>,
    allocator: &impl HeapAllocator<T>,
) -> T
where
    T::Builtin: InvalidationImportBuiltin,
{
    create_record(
        [
            (
                factory.create_string_term(allocator.create_static_string("poll")),
                factory.create_lambda_term(
                    2,
                    factory.create_application_term(
                        factory.create_builtin_term(reflex_stdlib::stdlib::Sequence),
                        allocator.create_pair(
                            factory.create_application_term(
                                factory.create_builtin_term(reflex_stdlib::stdlib::Hash),
                                allocator.create_unit_list(
                                    factory.create_application_term(
                                        factory.create_builtin_term(reflex_stdlib::stdlib::Effect),
                                        allocator.create_triple(
                                            factory.create_string_term(
                                                allocator
                                                    .create_static_string(EFFECT_TYPE_TIMESTAMP),
                                            ),
                                            factory.create_application_term(
                                                factory.create_builtin_term(reflex_stdlib::stdlib::CollectList),
                                                allocator.create_unit_list(
                                                    factory.create_variable_term(1),
                                                ),
                                            ),
                                            factory.create_nil_term(),
                                        ),
                                    ),
                                ),
                            ),
                            factory.create_variable_term(0),
                        ),
                    ),
                ),
            ),
            (
                factory.create_string_term(allocator.create_static_string("backoff")),
                factory.create_lambda_term(
                    1,
                    factory.create_application_term(
                        factory.create_builtin_term(reflex_stdlib::stdlib::Multiply),
                        allocator.create_pair(
                            factory.create_application_term(
                                factory.create_builtin_term(reflex_stdlib::stdlib::Min),
                                allocator.create_pair(
                                    factory.create_variable_term(0),
                                    factory.create_int_term(30),
                                ),
                            ),
                            factory.create_int_term(1000),
                        ),
                    ),
                ),
            ),
            (
                factory.create_string_term(allocator.create_static_string("retryErrors")),
                factory.create_let_term(
                    factory.create_lambda_term(
                        2,
                        factory.create_application_term(
                            factory.create_builtin_term(reflex_stdlib::stdlib::Effect),
                            allocator.create_list([
                                factory.create_string_term(allocator.create_static_string("reflex::timeout")),
                                factory.create_application_term(
                                    factory.create_builtin_term(reflex_stdlib::stdlib::CollectList),
                                    allocator.create_list([
                                        factory.create_variable_term(1),
                                    ]),
                                ),
                                factory.create_variable_term(0),
                            ]),
                        ),
                    ),
                    factory.create_application_term(
                        factory.create_builtin_term(reflex_stdlib::stdlib::ResolveArgs),
                        allocator.create_list([
                            factory.create_lambda_term(
                                2,
                                factory.create_let_term(
                                    factory.create_application_term(
                                        factory.create_builtin_term(reflex_stdlib::stdlib::Get),
                                        allocator.create_list([
                                            factory.create_variable_term(1),
                                            factory.create_string_term(allocator.create_static_string("delay")),
                                        ]),
                                    ),
                                    factory.create_let_term(
                                        factory.create_application_term(
                                            factory.create_builtin_term(reflex_stdlib::stdlib::Get),
                                            allocator.create_list([
                                                factory.create_variable_term(2),
                                                factory.create_string_term(allocator.create_static_string("timeout")),
                                            ]),
                                        ),
                                        factory.create_let_term(
                                            factory.create_application_term(
                                                factory.create_builtin_term(reflex_stdlib::stdlib::Hash),
                                                allocator.create_list([
                                                    factory.create_string_term(allocator.create_static_string("reflex::invalidation::retryErrors")),
                                                    factory.create_variable_term(2),
                                                    factory.create_variable_term(1),
                                                    factory.create_variable_term(0),
                                                ]),
                                            ),
                                            factory.create_let_term(
                                                factory.create_application_term(
                                                    factory.create_builtin_term(crate::stdlib::GetVariable),
                                                    allocator.create_list([
                                                        factory.create_variable_term(0),
                                                        factory.create_int_term(0),
                                                    ]),
                                                ),
                                                factory.create_application_term(
                                                    factory.create_application_term(
                                                        factory.create_builtin_term(reflex_stdlib::stdlib::ResolveArgs),
                                                        allocator.create_list([
                                                            factory.create_lambda_term(
                                                                2,
                                                                factory.create_let_term(
                                                                    factory.create_application_term(
                                                                        factory.create_builtin_term(crate::stdlib::Scan),
                                                                        allocator.create_list([
                                                                            factory.create_application_term(
                                                                                factory.create_builtin_term(reflex_stdlib::stdlib::IfError),
                                                                                allocator.create_list([
                                                                                    factory.create_application_term(
                                                                                        factory.create_builtin_term(reflex_stdlib::stdlib::Sequence),
                                                                                        allocator.create_list([
                                                                                            factory.create_application_term(
                                                                                                factory.create_builtin_term(reflex_stdlib::stdlib::IfPending),
                                                                                                allocator.create_list([
                                                                                                    factory.create_application_term(
                                                                                                        factory.create_variable_term(6),
                                                                                                        allocator.create_list([
                                                                                                            factory.create_variable_term(0),
                                                                                                        ]),
                                                                                                    ),
                                                                                                    factory.create_application_term(
                                                                                                        factory.create_builtin_term(reflex_stdlib::stdlib::Sequence),
                                                                                                        allocator.create_list([
                                                                                                            factory.create_application_term(
                                                                                                                factory.create_variable_term(8),
                                                                                                                allocator.create_list([
                                                                                                                    factory.create_variable_term(4),
                                                                                                                    factory.create_variable_term(0),
                                                                                                                ]),
                                                                                                            ),
                                                                                                            factory.create_lambda_term(
                                                                                                                1,
                                                                                                                factory.create_signal_term(
                                                                                                                    allocator.create_signal_list([
                                                                                                                        allocator.create_signal(
                                                                                                                            SignalType::Error,
                                                                                                                            factory.create_record_term(
                                                                                                                                allocator.create_struct_prototype(
                                                                                                                                    allocator.create_list([
                                                                                                                                        factory.create_string_term(allocator.create_static_string("name")),
                                                                                                                                        factory.create_string_term(allocator.create_static_string("message")),
                                                                                                                                    ]),
                                                                                                                                ),
                                                                                                                                allocator.create_list([
                                                                                                                                    factory.create_string_term(allocator.create_static_string("TimeoutError")),
                                                                                                                                    factory.create_string_term(allocator.create_static_string("Timeout exceeded")),
                                                                                                                                ]),
                                                                                                                            ),
                                                                                                                            factory.create_nil_term(),
                                                                                                                        ),
                                                                                                                    ]),
                                                                                                                ),
                                                                                                            ),
                                                                                                        ]),
                                                                                                    ),
                                                                                                ]),
                                                                                            ),
                                                                                            factory.create_lambda_term(
                                                                                                1,
                                                                                                factory.create_record_term(
                                                                                                    allocator.create_struct_prototype(
                                                                                                        allocator.create_list([
                                                                                                            factory.create_string_term(allocator.create_static_string("success")),
                                                                                                            factory.create_string_term(allocator.create_static_string("payload")),
                                                                                                            factory.create_string_term(allocator.create_static_string("retryIndex")),
                                                                                                        ]),
                                                                                                    ),
                                                                                                    allocator.create_list([
                                                                                                        factory.create_boolean_term(true),
                                                                                                        factory.create_variable_term(0),
                                                                                                        factory.create_variable_term(2),
                                                                                                    ]),
                                                                                                ),
                                                                                            ),
                                                                                        ]),
                                                                                    ),
                                                                                    factory.create_lambda_term(
                                                                                        1,
                                                                                        factory.create_record_term(
                                                                                            allocator.create_struct_prototype(
                                                                                                allocator.create_list([
                                                                                                    factory.create_string_term(allocator.create_static_string("success")),
                                                                                                    factory.create_string_term(allocator.create_static_string("payload")),
                                                                                                    factory.create_string_term(allocator.create_static_string("retryIndex")),
                                                                                                ]),
                                                                                            ),
                                                                                            allocator.create_list([
                                                                                                factory.create_boolean_term(false),
                                                                                                factory.create_application_term(
                                                                                                    factory.create_builtin_term(reflex_stdlib::stdlib::Apply),
                                                                                                    allocator.create_pair(
                                                                                                        factory.create_builtin_term(reflex_stdlib::stdlib::CollectSignal),
                                                                                                        factory.create_application_term(
                                                                                                            factory.create_builtin_term(reflex_stdlib::stdlib::Map),
                                                                                                            allocator.create_pair(
                                                                                                                factory.create_variable_term(0),
                                                                                                                factory.create_builtin_term(reflex_stdlib::stdlib::Raise),
                                                                                                            ),
                                                                                                        ),
                                                                                                    ),
                                                                                                ),
                                                                                                factory.create_variable_term(2),
                                                                                            ]),
                                                                                        ),
                                                                                    ),
                                                                                ]),
                                                                            ),
                                                                            factory.create_record_term(
                                                                                allocator.create_struct_prototype(
                                                                                    allocator.create_list([
                                                                                        factory.create_string_term(allocator.create_static_string("success")),
                                                                                        factory.create_string_term(allocator.create_static_string("payload")),
                                                                                        factory.create_string_term(allocator.create_static_string("latestSuccessIndex")),
                                                                                    ]),
                                                                                ),
                                                                                allocator.create_list([
                                                                                    factory.create_boolean_term(true),
                                                                                    factory.create_signal_term(
                                                                                        allocator.create_signal_list( [
                                                                                            allocator.create_signal(
                                                                                                SignalType::Pending,
                                                                                                factory.create_nil_term(),
                                                                                                factory.create_nil_term(),
                                                                                            ),
                                                                                        ] ),
                                                                                    ),
                                                                                    factory.create_int_term(0),
                                                                                ]),
                                                                            ),
                                                                            factory.create_lambda_term(
                                                                                2,
                                                                                factory.create_application_term(
                                                                                    factory.create_builtin_term(reflex_stdlib::stdlib::Merge),
                                                                                    allocator.create_list([
                                                                                        factory.create_application_term(
                                                                                            factory.create_builtin_term(reflex_stdlib::stdlib::CollectList),
                                                                                            allocator.create_list([
                                                                                                factory.create_variable_term(0),
                                                                                                factory.create_record_term(
                                                                                                    allocator.create_struct_prototype(
                                                                                                        allocator.create_list([
                                                                                                            factory.create_string_term(allocator.create_static_string("latestSuccessIndex")),
                                                                                                        ]),
                                                                                                    ),
                                                                                                    allocator.create_list([
                                                                                                        factory.create_application_term(
                                                                                                            factory.create_builtin_term(reflex_stdlib::stdlib::If),
                                                                                                            allocator.create_list([
                                                                                                                factory.create_application_term(
                                                                                                                    factory.create_builtin_term(reflex_stdlib::stdlib::Get),
                                                                                                                    allocator.create_list([
                                                                                                                        factory.create_variable_term(0),
                                                                                                                        factory.create_string_term(allocator.create_static_string("success")),
                                                                                                                    ]),
                                                                                                                ),
                                                                                                                factory.create_application_term(
                                                                                                                    factory.create_builtin_term(reflex_stdlib::stdlib::Get),
                                                                                                                    allocator.create_list([
                                                                                                                        factory.create_variable_term(0),
                                                                                                                        factory.create_string_term(allocator.create_static_string("retryIndex")),
                                                                                                                    ]),
                                                                                                                ),
                                                                                                                factory.create_application_term(
                                                                                                                    factory.create_builtin_term(reflex_stdlib::stdlib::Get),
                                                                                                                    allocator.create_list([
                                                                                                                        factory.create_variable_term(1),
                                                                                                                        factory.create_string_term(allocator.create_static_string("latestSuccessIndex")),
                                                                                                                    ]),
                                                                                                                ),
                                                                                                            ]),
                                                                                                        ),
                                                                                                    ]),
                                                                                                ),
                                                                                            ]),
                                                                                        ),
                                                                                    ]),
                                                                                ),
                                                                            ),
                                                                        ]),
                                                                    ),
                                                                    factory.create_let_term(
                                                                        factory.create_application_term(
                                                                            factory.create_builtin_term(reflex_stdlib::stdlib::Get),
                                                                            allocator.create_list([
                                                                                factory.create_variable_term(0),
                                                                                factory.create_string_term(allocator.create_static_string("payload")),
                                                                            ]),
                                                                        ),
                                                                        factory.create_application_term(
                                                                            factory.create_builtin_term(reflex_stdlib::stdlib::If),
                                                                            allocator.create_list([
                                                                                factory.create_application_term(
                                                                                    factory.create_builtin_term(reflex_stdlib::stdlib::Get),
                                                                                    allocator.create_list([
                                                                                        factory.create_variable_term(1),
                                                                                        factory.create_string_term(allocator.create_static_string("success")),
                                                                                    ]),
                                                                                ),
                                                                                factory.create_variable_term(0),
                                                                                factory.create_application_term(
                                                                                    factory.create_builtin_term(reflex_stdlib::stdlib::IfPending),
                                                                                    allocator.create_list([
                                                                                        factory.create_application_term(
                                                                                            factory.create_builtin_term(reflex_stdlib::stdlib::Sequence),
                                                                                            allocator.create_list([
                                                                                                factory.create_application_term(
                                                                                                    factory.create_variable_term(10),
                                                                                                    allocator.create_list([
                                                                                                        factory.create_application_term(
                                                                                                            factory.create_builtin_term(reflex_stdlib::stdlib::Max),
                                                                                                            allocator.create_list([
                                                                                                                factory.create_int_term(1),
                                                                                                                factory.create_application_term(
                                                                                                                    factory.create_variable_term(7),
                                                                                                                    allocator.create_list([
                                                                                                                        factory.create_application_term(
                                                                                                                            factory.create_builtin_term(reflex_stdlib::stdlib::Subtract),
                                                                                                                            allocator.create_list([
                                                                                                                                factory.create_application_term(
                                                                                                                                    factory.create_builtin_term(reflex_stdlib::stdlib::Get),
                                                                                                                                    allocator.create_list([
                                                                                                                                        factory.create_variable_term(1),
                                                                                                                                        factory.create_string_term(allocator.create_static_string("retryIndex")),
                                                                                                                                    ]),
                                                                                                                                ),
                                                                                                                                factory.create_application_term(
                                                                                                                                    factory.create_builtin_term(reflex_stdlib::stdlib::Get),
                                                                                                                                    allocator.create_list([
                                                                                                                                        factory.create_variable_term(1),
                                                                                                                                        factory.create_string_term(allocator.create_static_string("latestSuccessIndex")),
                                                                                                                                    ]),
                                                                                                                                ),
                                                                                                                            ]),
                                                                                                                        ),
                                                                                                                    ]),
                                                                                                                ),
                                                                                                            ]),
                                                                                                        ),
                                                                                                        factory.create_variable_term(2),
                                                                                                    ]),
                                                                                                ),
                                                                                                factory.create_lambda_term(
                                                                                                    1,
                                                                                                    factory.create_application_term(
                                                                                                        factory.create_builtin_term(reflex_stdlib::stdlib::Sequence),
                                                                                                        allocator.create_list([
                                                                                                            factory.create_application_term(
                                                                                                                factory.create_builtin_term(crate::stdlib::IncrementVariable),
                                                                                                                allocator.create_list([
                                                                                                                    factory.create_variable_term(6),
                                                                                                                    factory.create_variable_term(3),
                                                                                                                ]),
                                                                                                            ),
                                                                                                            factory.create_lambda_term(
                                                                                                                1,
                                                                                                                factory.create_variable_term(2),
                                                                                                            ),
                                                                                                        ]),
                                                                                                    ),
                                                                                                ),
                                                                                            ]),
                                                                                        ),
                                                                                        factory.create_variable_term(0),
                                                                                    ]),
                                                                                ),
                                                                            ]),
                                                                        ),
                                                                    ),
                                                                ),
                                                            ),
                                                        ]),
                                                    ),
                                                    allocator.create_list([
                                                        factory.create_variable_term(0),
                                                        factory.create_application_term(
                                                            factory.create_builtin_term(reflex_stdlib::stdlib::Hash),
                                                            allocator.create_list([
                                                                factory.create_variable_term(1),
                                                                factory.create_variable_term(0),
                                                            ]),
                                                        ),
                                                    ]),
                                                ),
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                        ]),
                    ),
                ),
            ),
        ],
        factory,
        allocator,
    )
}
